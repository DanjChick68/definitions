# Malaysia holiday definitions for the Holidays gem!

# Days not included in the definitions (yet):
# Vesak Day (falls on the first full moon in May)
# Lunar New Year (falls on the first day of the Lunar Calendar)
# Hari Raya Puasa and Hari Raya Haji (based on moon sightings, Islamic Calendar)
# Deepavali (15th Day of September or October, based on the Hindu Calendar)

# Source:
# http://publicholidays.com.my/

months:
  1:
  - name: New Year's Day
    regions: [my]
    mday: 1
  5:
  - name: Labour Day
    regions: [my]
    mday: 1
  6:
  - name: Agong's Birthday
    regions: [my]
    function: agong_birthday_june(year)
  8:
  - name: Independence Day
    regions: [my]
    mday: 31
    observed: to_weekday_if_weekend(date)
  9:
  - name: Agong's Birthday
    regions: [my]
    function: agong_birthday_september(year)
  - name: Malaysia Day
    regions: [my]
    mday: 16
  12:
  - name: Christmas Day
    regions: [my]
    mday: 25
    observed: to_weekday_if_weekend(date)

methods:
  agong_birthday_june:
    arguments: year
    source: |
      if year <= 2016
        Date.new(year, 6, 4)
      else
        nil
      end
  agong_birthday_september:
    arguments: year
    source: |
      if year >= 2017
        Holidays::Factory::DateCalculator.day_of_month_calculator.call(year, 9, :second, :saturday)
      else
        nil
      end

tests: |
    {Date.civil(2016,1,1) => "New Year's Day",
     Date.civil(2016,5,1) => 'Labour Day',
     Date.civil(2016,6,4) => "Agong's Birthday",
     Date.civil(2017,9,09) => "Agong's Birthday",
     Date.civil(2016,8,31) => 'Independence Day',
     Date.civil(2016,9,16) => 'Malaysia Day',
     Date.civil(2016,12,25) => 'Christmas Day'}.each do |date, name|
      assert_equal name, (Holidays.on(date, :my, :informal)[0] || {})[:name]
    end

    assert_nil Date.civil(2017, 9, 15).holidays(:my, :observed)[0]
    assert_nil Date.civil(2017, 1, 2).holidays(:my, :observed)[0]
